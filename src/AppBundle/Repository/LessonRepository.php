<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Lesson;
use AppBundle\Entity\User;

/**
 * LessonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LessonRepository extends \Doctrine\ORM\EntityRepository
{
    public function findUserLessonByTime(User $user, $now)
    {
        return $this->createQueryBuilder('l')
            ->where(':currentTime BETWEEN l.startTime AND l.endTime')
            ->setParameter('currentTime', $now)
            ->andWhere('l.user = :user')
            ->setParameter('user', $user)
            ->getQuery()
            ->getSingleResult();
    }

    /**
     * Finds next user lesson
     *
     * @param  User $user
     * @param  int $id
     * @return mixed
     */
    public function findNextUserLessonById(User $user, $id)
    {
        return $this->createQueryBuilder('a')
            ->setParameter('id', $id)
            ->leftJoin(Lesson::class, 'b', 'WITH', 'b.id = :id')
            ->where('a.startTime >= b.endTime')
            ->andWhere('a.user = :user')
            ->setParameter('user', $user)
            ->orderBy('a.startTime')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * Finds previous user lesson
     *
     * @param  User $user
     * @param  int $id
     * @return mixed
     */
    public function findPrevUserLessonById(User $user, $id)
    {
        return $this->createQueryBuilder('a')
            ->setParameter('id', $id)
            ->leftJoin(Lesson::class, 'b', 'WITH', 'b.id = :id')
            ->where('a.endTime <= b.startTime')
            ->andWhere('a.user = :user')
            ->setParameter('user', $user)
            ->orderBy('a.startTime', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }
}
